<!--

    Copyright (c) 2015 ScientiaMobile Inc.

    The WURFL Cloud Client is intended to be used in both open-source and
    commercial environments. To allow its use in as many situations as possible,
    the WURFL Cloud Client is dual-licensed. You may choose to use the WURFL
    Cloud Client under either the GNU GENERAL PUBLIC LICENSE, Version 2.0, or
    the MIT License.

    Refer to the COPYING.txt file distributed with this package.

-->
<configuration>

    <!-- Default configuration : log on stdout appender, only root logger configured-->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <layout class="ch.qos.logback.classic.PatternLayout">
            <Pattern>%-15(%d{HH:mm:ss} [%thread]) %.-1level %logger{30} %line - %msg%n%xEx{10}</Pattern>
        </layout>
    </appender>

    <!--Basic file appender-->
    <!--<appender name="FILE"

              class="ch.qos.logback.core.FileAppender">
                         5
        <layout class="ch.qos.logback.classic.PatternLayout">

            &lt;!&ndash;<pattern>%-4relative [%thread] %-5level %logger{36} - %msg%n</pattern>&ndash;&gt;
            <pattern>%msg%n</pattern>

        </layout>

        <File>test-log.txt</File>

    </appender>
-->

    <!--Every hour rolling file appender -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">

        <File>logs/testsLogs.txt</File>

        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">

            <FileNamePattern>logs/testsLogs.%d{yyyy-MM-dd.HH}.txt</FileNamePattern>

        </rollingPolicy>


        <layout class="ch.qos.logback.classic.PatternLayout">

            <!--<Pattern>%-4relative [%thread] %-5level %logger{35} - %msg%n</Pattern>-->
            <Pattern>%msg%n</Pattern>

        </layout>

    </appender>

    <!-- level are:
          trace < debug < info < warn < error < off
          "off" completely shut down logging for the given logger
     -->
    <root level="debug">
        <appender-ref ref="STDOUT"/>
    </root>
<!--

    <logger name="net.sourceforge.wurfl.core.classifiers.FilterChain" level="debug">
        <appender-ref ref="FILE"/>
    </logger>

    <logger name="net.sourceforge.wurfl.core.resource.DefaultWURFLModel" level="debug">
        <appender-ref ref="FILE"/>
    </logger>
                                                                           -->
    <logger name="net.sourceforge.wurfl.core.resource.XmlTestFileLoaderTest" level="debug">
        <appender-ref ref="FILE"/>
    </logger>





    <!--
    <logger name="net.sourceforge.wurfl.core.matchers.MatcherChain" level="debug">
        <appender-ref ref="FILE"/>
    </logger>
    <logger name="net.sourceforge.wurfl.core.matchers.AbstractMatcher" level="debug">
        <appender-ref ref="FILE"/>
    </logger>
    <logger name="net.sourceforge.wurfl.core.classifiers" level="trace">
        <appender-ref ref="FILE"/>
    </logger>-->
<!--    <logger name="net.sourceforge.wurfl.core.resource.XmlTestFileLoaderTest">
        <appender-ref ref="FILE"/>
     </logger>-->
    <!--
    <logger name="net.sourceforge.wurfl.core.operation.strategy.Strategy" level="info">
        <appender-ref ref="FILE"/>
     </logger>

    <logger name="net.sourceforge.wurfl.core.device" level="info">
        <appender-ref ref="FILE"/>
     </logger>

    <logger name="net.sourceforge.wurfl.core.operation.tolerance.AndroidThresholdOp" level="info" />
-->
    <!--
	    You can specify log level for package and class, 
	    they inherit the root appender.
	    
	<logger name="foo" level="INFO" />
	<logger name="foo.MyClass" level="DEBUG" />

	<logger name="org.test.upload" level="trace" />


    <logger name="org.codehaus.jackson" level="info" />
    <logger name="org.hibernate" level="info" />
    <logger name="org.hibernate.impl.SessionImpl" level="debug" />
    <logger name="org.hibernate.transaction" level="debug" />
    <logger name="org.hibernate.jdbc" level="debug" />
    <logger name="org.springframework" level="info" />
	<logger name="org.springframework.orm.jpa.JpaTransactionManager" level="debug" />

	               -->
    <!--
          You can also define other appender for sub-trees.
          Be careful, in this case, appender are cumulative
          (log will be outputed both on STDOUT and in FILE

     <logger name="foo.bar.OtherClass" >
         <appender-ref ref="FILE" />
     </logger>
     -->


    <!--
         if you don't want appender to be cumulative, add additivity
         parameter and set it to false:

     <logger name="foo.bar.OtherClass" additivity="false">
         <appender-ref ref="FILE" />
     </logger>
     -->

    <!--
          You can define properties and used them in place of parameter:

     <property name="USER_HOME" value="/home/foohome" />

          Properties may also come from a file:

     <property file="src/main/java/foo/bar/baz/variables.properties" />

          Or from a classpath resource:

     <property resource="resource.properties" />

        And properties may be compose with other properties:

 USER_HOME=/home/foohome
 fileName=myApp.log
 destination=${USER_HOME}/${fileName}

      -->

</configuration>
